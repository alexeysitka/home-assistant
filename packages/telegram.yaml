telegram_bot:
  - platform: polling
    api_key: !secret telegram_token
    allowed_chat_ids:
      - !secret telegram_alexey
      - !secret telegram_julia
      - !secret telegram_dana

notify:
  - name: julia
    platform: telegram
    chat_id: !secret telegram_julia
  - name: alexey
    platform: telegram
    chat_id: !secret telegram_alexey
  - name: dana
    platform: telegram
    chat_id: !secret telegram_dana

group:
  unavailable_lights:
    name: unavailable_sensors
    entities: []
  unavailable_switches:
    name: unavailable_sensors
    entities: []
  unavailable_sensors:
    name: unavailable_sensors
    entities: []
  unavailable_bin_sensors:
    name: unavailable_sensors
    entities: []

sensor:
  - platform: template
    sensors:
      unavailable_lights_count:
        friendly_name: '–í—Å–µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤'
        value_template: '{{ expand("group.unavailable_lights") | list | count }}'
        icon_template: mdi:counter

      unavailable_switches_count:
        friendly_name: '–í—Å–µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π'
        value_template: '{{ expand("group.unavailable_switches") | list | count }}'
        icon_template: mdi:counter

      unavailable_sensors_count:
        friendly_name: '–í—Å–µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ–Ω—Å–æ—Ä–æ–≤ - '
        value_template: '{{ expand("group.unavailable_sensors") | list | count }}'
        icon_template: mdi:counter

      unavailable_bin_sensors_count:
        friendly_name: '–í—Å–µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∏–Ω–∞—Ä–Ω—ã—Ö —Å–µ–Ω—Å–æ—Ä–æ–≤ - '
        value_template: '{{ expand("group.unavailable_bin_sensors") | list | count }}'
        icon_template: mdi:counter

script:
  system_report:
    description: '–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã'
    sequence:
      - service: group.set
        data:
          object_id: unavailable_lights
          entities: >
            {{ states.light | selectattr ("state", "equalto", "unavailable") | map(attribute="entity_id") | list }}
      - service: group.set
        data:
          object_id: unavailable_switches
          entities: >
            {{ states.switch | selectattr ("state", "equalto", "unavailable") | map(attribute="entity_id") | list }}
      - service: group.set
        data:
          object_id: unavailable_sensors
          entities: >
            {{ states.sensor | selectattr ("state", "equalto", "unavailable") | map(attribute="entity_id") | list }}
      - service: group.set
        data:
          object_id: unavailable_bin_sensors
          entities: >
            {{ states.binary_sensor | selectattr ("state", "equalto", "unavailable") | map(attribute="entity_id") | list }}
      - service: notify.alexey
        data:
          message: "
            {{'üß†'}} –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã\n\
            {{'üóì'}} –û—Ç—á–µ—Ç –∑–∞ {{ states('sensor.time_date') }}\n\
            {{'üí°'}} –°–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - {{ states('sensor.unavailable_lights_count') }}\n\
            {% if states('sensor.unavailable_lights_count') | float > 0 %}{% for object in expand('group.unavailable_lights') %}    {{object.entity_id | replace('_', '\\_') }}\n{% endfor %}{% endif %}\
            {{'üéö'}} –í—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - {{ states('sensor.unavailable_switches_count') }}\n\
            {% if states('sensor.unavailable_switches_count') | float > 0 %}{% for object in expand('group.unavailable_switches') %}    {{ object.entity_id | replace('_', '\\_') }}\n{% endfor %}{% endif %}\
            {{'üå°'}} –°–µ–Ω—Å–æ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - {{ states('sensor.unavailable_sensors_count') }}\n\
            {% if states('sensor.unavailable_sensors_count') | float > 0 %}{% for object in expand('group.unavailable_sensors') %}    {{object.entity_id | replace('_', '\\_')}}\n{% endfor %}{% endif %}\
            {{'üñ≤'}} –ë–∏–Ω–∞—Ä–Ω—ã—Ö —Å–µ–Ω—Å–æ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - {{ states('sensor.unavailable_bin_sensors_count') }}\n\
            {% if states('sensor.unavailable_bin_sensors_count') | float > 0 %}{% for object in expand('group.unavailable_bin_sensors') %}    {{ object.entity_id | replace('_', '\\_') }}\n{% endfor %}{% endif %}\
            "

  notify_all:
    description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º'
    fields:
      message:
        description: '–°–æ–æ–±—â–µ–Ω–∏–µ'
        example: '–°–æ–æ–±—â–µ–Ω–∏–µ'
    sequence:
      - service: notify.alexey
        data:
          message: '{{ message }}'
      - service: notify.julia
        data:
          message: '{{ message }}'
      - service: notify.dana
        data:
          message: '{{ message }}'

automation:
  - id: '–û—Ç—á–µ—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∏—Å—Ç–µ–º—ã'
    alias: system_start_message
    initial_state: true
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: notify.alexey
        data:
          message: |
            {{'\U0001F4AC'}} –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä Raspberry Pi
            {{'\U0001F567'}} –ó–∞–ø—É—Å–∫ –≤ {{ states('sensor.time_date') }}
            {{'\U0001F4C3'}} –û—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
      - delay: '00:01:00'
      - service: script.system_report
