fan:
  - platform: xiaomi_miio_airpurifier
    name: be_breezer_source
    host: 192.168.31.244
    token: b728bc44289d0dfaf998cd76ec5af3f2
    model: zhimi.airfresh.va4

  - platform: template
    fans:
      be_breezer:
        friendly_name: "Бризер в спальне"
        value_template: "{{ states('fan.be_breezer_source') }}"
        turn_on:
          service: fan.turn_on
          target:
            entity_id: fan.be_breezer_source
        turn_off:
          service: fan.turn_off
          target:
            entity_id: fan.be_breezer_source
        preset_modes:
          - 'auto'
          - 'silent'
          - 'low'
          - 'medium'
          - 'high'
        preset_mode_template: >
          {% if is_state('fan.be_breezer_source', 'on') %}
            {% if is_state_attr('fan.be_breezer_source', 'mode', 'auto') %}
              auto
            {% elif is_state_attr('fan.be_breezer_source', 'mode', 'silent') %}
              silent
            {% elif is_state_attr('fan.be_breezer_source', 'mode', 'low') %}
              low
            {% elif is_state_attr('fan.be_breezer_source', 'mode', 'middle') %}
              medium
            {% elif is_state_attr('fan.be_breezer_source', 'mode', 'strong') %}
              high
            {% endif %}
          {% else %}
            off
          {% endif %}
        set_preset_mode:
          - service: fan.set_preset_mode
            target:
              entity_id: fan.be_breezer_source
            data:
              preset_mode: >-
                {% if preset_mode == 'auto' %}
                  auto
                {% elif preset_mode == 'silent' %}
                  silent
                {% elif preset_mode == 'low' %}
                  low
                {% elif preset_mode == 'medium' %}
                  middle
                {% elif preset_mode == 'high' %}
                  strong
                {% endif %}

sensor:
  - platform: template
    sensors:
      be_breezer_ntc_temperature:
        friendly_name: Температура обогревателя у бризера в спальне
        value_template: "{{ state_attr('fan.be_breezer_source', 'ntc_temperature') }}"
        icon_template: mdi:sun-thermometer
        unit_of_measurement: '°C'
      be_breezer_temperature:
        friendly_name: Температура по бризеру в спальне
        value_template: "{{ state_attr('fan.be_breezer_source', 'temperature') }}"
        icon_template: mdi:thermometer
        unit_of_measurement: '°C'
      be_breezer_co2:
        friendly_name: Углекислый газ по бризеру спальни
        value_template: "{{ state_attr('fan.be_breezer_source', 'co2') }}"
        icon_template: mdi:molecule-co2
        unit_of_measurement: 'ppm'

switch:
  - platform: template
    switches:
      be_breezer_ptc:
        friendly_name: Обогреватель бризера в спальне
        value_template: "{{ is_state_attr('fan.be_breezer_source', 'ptc', True) }}"
        turn_on:
          service: xiaomi_miio_airpurifier.fan_set_ptc_on
          data:
            entity_id: fan.be_breezer_source
        turn_off:
          service: xiaomi_miio_airpurifier.fan_set_ptc_off
          data:
            entity_id: fan.be_breezer_source
        icon_template: >-
          {% if is_state_attr('fan.be_breezer_source', 'ptc', true) %}
          mdi:radiator
          {% else %}
          mdi:radiator-disabled
          {% endif %}

input_select:
  be_breezer_mode:
    name: Fan mode
    options:
      - auto
      - silent
      - low
      - medium
      - high

automation:
  - id: 'Выставить режим бризера в спальне'
    alias: be_breezer_set_preset_mode
    trigger:
      entity_id: input_select.be_breezer_mode
      platform: state
    action:
      - service: fan.set_preset_mode
        data_template:
          entity_id: fan.be_breezer
          preset_mode: "{{ states('input_select.be_breezer_mode') }}"

  - id: 'Отслеживать режим бризера в спальне'
    alias: be_breezer_track_preset_mode_for_input
    trigger:
      platform: state
      entity_id: fan.be_breezer
    action:
      - service: input_select.select_option
        entity_id: input_select.be_breezer_mode
        data_template:
          option: "{{ state_attr('fan.be_breezer', 'preset_mode') }}"

  - id: 'Авто-режим днём при нормальном CO₂'
    alias: be_breezer_day_set_auto_mode_on_normal_co2
    condition:
      - condition: time
        after: '10:00:00'
        before: '00:00:00'
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_co2
        below: 550
    action:
      - service: fan.set_preset_mode
        data_template:
          entity_id: fan.be_breezer
          preset_mode: auto

  - id: 'Низкий режим днём при повышенном CO₂'
    alias: be_breezer_day_set_low_mode_on_heightened_co2
    condition:
      - condition: time
        after: '10:00:00'
        before: '00:00:00'
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_co2
        above: 600
        below: 700
    action:
      - service: fan.set_preset_mode
        data_template:
          entity_id: fan.be_breezer
          preset_mode: low

  - id: 'Средний режим днём при высоком CO₂'
    alias: be_breezer_day_set_middle_mode_on_high_co2
    condition:
      - condition: time
        after: '10:00:00'
        before: '00:00:00'
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_co2
        above: 750
        below: 1150
    action:
      - service: fan.set_preset_mode
        data_template:
          entity_id: fan.be_breezer
          preset_mode: medium

  - id: 'Сильный режим днём при очень высоком CO₂'
    alias: be_breezer_day_set_strong_mode_on_highest_co2
    condition:
      - condition: time
        after: '10:00:00'
        before: '00:00:00'
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_co2
        above: 1200
    action:
      - service: fan.set_preset_mode
        data_template:
          entity_id: fan.be_breezer
          preset_mode: high

  - id: 'Тихий режим ночью при нормальном CO₂'
    alias: be_breezer_night_set_silent_mode_on_normal_co2
    condition:
      - condition: time
        after: '00:00:00'
        before: '10:00:00'
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_co2
        below: 750
    action:
      - service: fan.set_preset_mode
        data_template:
          entity_id: fan.be_breezer
          preset_mode: silent

  - id: 'Низкий режим ночью при повышенной CO₂'
    alias: be_breezer_night_set_low_mode_on_heightened_co2
    condition:
      - condition: time
        after: '00:00:00'
        before: '10:00:00'
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_co2
        above: 800
        below: 1150
    action:
      - service: fan.set_preset_mode
        data_template:
          entity_id: fan.be_breezer
          preset_mode: low

  - id: 'Средний режим ночью при очень высоком CO₂'
    alias: be_breezer_night_set_middle_mode_on_high_co2
    condition:
      - condition: time
        after: '00:00:00'
        before: '10:00:00'
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_co2
        above: 1200
    action:
      - service: fan.set_preset_mode
        data_template:
          entity_id: fan.be_breezer
          preset_mode: medium

  - id: 'Включить обогрев при низкой температуре на обогревателе и в комнате'
    alias: be_breezer_enable_ptc_on_low_temperature
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_breezer_ntc_temperature
        below: 15
    condition:
      - condition: numeric_state
        entity_id: sensor.be_breezer_temperature
        below: 22
    action:
      - service: switch.turn_on
        entity_id: switch.be_breezer_ptc

  - id: 'Выключить обогрев при высокой температуре на обогревателе и в комнате'
    alias: be_breezer_disable_ptc_on_high_temperature
    trigger:
      - platform: numeric_state
        entity_id: sensor.be_breezer_ntc_temperature
        above: 23
    condition:
      - condition: numeric_state
        entity_id: sensor.be_breezer_temperature
        above: 23
    action:
      - service: switch.turn_on
        entity_id: switch.be_breezer_ptc
