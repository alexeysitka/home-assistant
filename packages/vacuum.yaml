input_boolean:
  daily_vacuum_done:
    name: Ежедневная уборка выполнена
    initial: off
  disable_daily_vacuum:
    name: Выключить автоматизацию ежедневной уборки
    initial: off
  disable_dustbin_notification:
    name: Отключить уведомление об очистке мусорного контейнера
    initial: off

binary_sensor:
  - platform: template
    sensors:
      vacuum_bin_status:
        friendly_name: 'Мусор в корзине'
        device_class: problem
        value_template: >-
          {{ states('sensor.roborocks5bin') | default(0) | int > 30 }}
        icon_template: >
          {% set val = states("sensor.roborocks5bin") | int  %}
          {% if val > 30 %}
            mdi:delete-alert
          {% else %}
            mdi:delete-outline
          {% endif %}
      vacuum_able_to_clean:
        friendly_name: Выполнены ли условия для уборки
        value_template: >
          {{ 
            is_state('binary_sensor.vacuum_bin_status', 'off')
              and is_state('input_boolean.daily_vacuum_done', 'off')
              and is_state('automation.vacuum_scheduled_start', 'on')
          }}
        icon_template: >
          {%
            set val = is_state('binary_sensor.vacuum_bin_status', 'off')
              and is_state('input_boolean.daily_vacuum_done', 'off')
              and is_state('automation.vacuum_scheduled_start', 'on')
          %}
          {% if val %}
            mdi:toggle-switch-variant
          {% else %}
            mdi:toggle-switch-variant-off
          {% endif %}
        

sensor:
  - platform: template
    sensors:
      vacuum_status:
        friendly_name: 'Статус'
        value_template: >
          {% if states("vacuum.valetudo_roborocks5") == None %}
            Unknown
          {% else %}
            {{ states("vacuum.valetudo_roborocks5") }}
          {% endif %}
        icon_template: >
          {% set val = states("vacuum.valetudo_roborocks5")  %}
          {% if val == 'charging' %}
            mdi:battery-charging
          {% elif val == 'cleaning' %}
            mdi:move-resize
          {% elif val == 'returning' %}
            mdi:keyboard-return
          {% elif val == 'idle' %}
            mdi:dots-horizontal
          {% elif val == 'paused' %}
            mdi:pause-circle
          {% else %}
            mdi:help-circle
          {% endif %}
      vacuum_battery:
        friendly_name: 'Заряд батареи'
        value_template: >
          {% if state_attr("vacuum.valetudo_roborocks5", "battery_level") == None %}
            0
          {% else %}
            {{ state_attr("vacuum.valetudo_roborocks5", "battery_level") }}
          {% endif %}
        unit_of_measurement: '%'
        icon_template: >
          {% if state_attr("vacuum.valetudo_roborocks5", "battery_icon") == None %}
            mdi:battery-unknown
          {% else %}
            {{ state_attr("vacuum.valetudo_roborocks5", "battery_icon") }}
          {% endif %}

  - platform: mqtt
    object_id: vacuum_cleaning_time
    name: 'Последняя уборка'
    state_topic: 'Valetudo/RoborockS5/CurrentStatisticsCapability/time'
    value_template: >
      {{ value }}
    icon: 'mdi:timer'

  - platform: mqtt
    object_id: vacuum_cleaned_area
    name: 'Площадь'
    unit_of_measurement: 'м²'
    state_topic: 'Valetudo/RoborockS5/CurrentStatisticsCapability/area'
    value_template: >
      {{ (value | float / 10000) | round }}
    icon: 'mdi:ruler'

  - platform: mqtt
    object_id: vacuum_cleaner_filter_left_hours
    name: 'Фильтр'
    unit_of_measurement: 'ч'
    state_topic: 'Valetudo/RoborockS5/ConsumableMonitoringCapability/filter-main'
    value_template: >
      {{ (value | float / 3600) | round }}
    icon: 'mdi:air-filter'

  - platform: mqtt
    object_id: vacuum_cleaner_side_brush_left_hours
    name: 'Боковая щётка'
    unit_of_measurement: 'ч'
    state_topic: 'Valetudo/RoborockS5/ConsumableMonitoringCapability/brush-side_right'
    value_template: >
      {{ (value | float / 3600) | round }}
    icon: 'mdi:star-three-points-outline'

  - platform: mqtt
    object_id: vacuum_cleaner_main_brush_left_hours
    name: 'Основная щётка'
    unit_of_measurement: 'ч'
    state_topic: 'Valetudo/RoborockS5/ConsumableMonitoringCapability/brush-main'
    value_template: >
      {{ (value | float / 3600) | round }}
    icon: 'mdi:robot-vacuum-variant'

  - platform: mqtt
    object_id: vacuum_cleaner_sensor_dirty_left_hours
    name: 'Сенсоры'
    unit_of_measurement: 'ч'
    state_topic: 'Valetudo/RoborockS5/ConsumableMonitoringCapability/sensor-all'
    value_template: >
      {{ (value | float / 3600) | round }}
    icon: 'mdi:leak'

script:
  vacuum_start:
    description: 'Пропылесосить квартиру'
    sequence:
      - service: vacuum.start
        data:
          entity_id: vacuum.valetudo_roborocks5

  vacuum_start_notify_door:
    description: 'Уведомление о начале уборки квартиры'
    sequence:
      - service: script.notify_all
        data:
          message: |
            Пылесос начнёт убираться через 10 минут.
            Откройте двери и уберите барахло с пола.

  be_vacuum_clean:
    description: 'Пропылесосить спальню'
    sequence:
      - service: mqtt.publish
        data:
          topic: 'Valetudo/RoborockS5/MapSegmentationCapability/clean/set'
          payload: >
            { "segment_ids": [ "22", "16" ]}
      - service: notify.alexey
        data:
          message: |
            Пылесос приступил к уборке в cпальне

  ca_vacuum_clean:
    description: 'Пропылесосить кабинет'
    sequence:
      - service: mqtt.publish
        data:
          topic: 'Valetudo/RoborockS5/MapSegmentationCapability/clean/set'
          payload: >
            { "segment_ids": [ "16" ]}
      - service: notify.alexey
        data:
          message: |
            Пылесос приступил к уборке в кабинете

  ch_vacuum_clean:
    description: 'Пропылесосить детскую'
    sequence:
      - service: mqtt.publish
        data:
          topic: 'Valetudo/RoborockS5/MapSegmentationCapability/clean/set'
          payload: >
            { "segment_ids": [ "21" ]}
      - service: notify.alexey
        data:
          message: |
            Пылесос приступил к уборке в детской

  li_vacuum_clean:
    description: 'Пропылесосить гостиную'
    sequence:
      - service: mqtt.publish
        data:
          topic: 'Valetudo/RoborockS5/MapSegmentationCapability/clean/set'
          payload: >
            { "segment_ids": [ "20" ]}
      - service: notify.alexey
        data:
          message: |
            Пылесос приступил к уборке в гостиной

  kn_vacuum_clean:
    description: 'Пропылесосить кухню'
    sequence:
      - service: mqtt.publish
        data:
          topic: 'Valetudo/RoborockS5/MapSegmentationCapability/clean/set'
          payload: >
            { "segment_ids": [ "19" ]}
      - service: notify.alexey
        data:
          message: |
            Пылесос приступил к уборке на кухне

  co_vacuum_clean:
    description: 'Пропылесосить коридор'
    sequence:
      - service: mqtt.publish
        data:
          topic: 'Valetudo/RoborockS5/MapSegmentationCapability/clean/set'
          payload: >
            { "segment_ids": [ "17", "18" ]}
      - service: notify.alexey
        data:
          message: |
            Пылесос приступил к уборке в коридоре

  ha_vacuum_clean:
    description: 'Пропылесосить прихожую'
    sequence:
      - service: mqtt.publish
        data:
          topic: 'Valetudo/RoborockS5/MapSegmentationCapability/clean/set'
          payload: >
            { "segment_ids": [ "18" ]}
      - service: notify.alexey
        data:
          message: |
            Пылесос приступил к уборке в туалете


automation:
  - id: 'Напоминание о корзине перед уборкой'
    alias: vacuum_dust_bin_pre_start_notification
    trigger:
      - platform: time_pattern
        hours: 18
        minutes: /10
    condition:
      - condition: state
        entity_id: binary_sensor.vacuum_bin_status
        state: 'on'
      - condition: state
        entity_id: input_boolean.daily_vacuum_done
        state: 'off'
      - condition: state
        entity_id: automation.vacuum_scheduled_start
        state: 'on'
    action:
      - service: script.notify_all
        data:
          message: |
            У пылесоса не вытряхнули корзину!!!
            Вытряхните, иначе уборки не будет.

  - id: 'Авто-старт если корзину вытряхнули после не-старта уборки по расписанию'
    alias: vacuum_auto_start_after_dust_bin_off_on_schedule_time
    trigger:
      - platform: state
        entity_id: binary_sensor.vacuum_bin_status
        to: 'off'
    condition:
      - condition: time
        after: '19:00:00'
        before: '22:00:00'
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.vacuum_able_to_clean
            state: 'on'
    action:
      - service: script.vacuum_start

  - id: 'Предварительное уведомление об уборке'
    alias: vacuum_scheduled_pre_start_notification
    trigger:
      - platform: time_pattern
        hours: 18
        minutes: 45
    condition:
      - condition: state
        entity_id: binary_sensor.vacuum_bin_status
        state: 'off'
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.vacuum_able_to_clean
            state: 'on'
    action:
      - service: script.notify_all
        data:
          message: |
            Пылесос начнёт убираться через 15 минут.
            Откройте двери и уберите барахло с пола.

  - id: 'Предварительное уведомление о закрытых дверях'
    alias: vacuum_scheduled_pre_start_notification_door
    trigger:
      - platform: time_pattern
        hours: 18
        minutes: 55
    condition:
      - condition: state
        entity_id: binary_sensor.vacuum_able_to_clean
        state: 'on'
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.be_door_contact
            state: 'off'
          - condition: state
            entity_id: binary_sensor.ch_door_contact
            state: 'off'
          - condition: state
            entity_id: binary_sensor.li_door_contact
            state: 'off'
          - condition: state
            entity_id: binary_sensor.kn_door_contact
            state: 'off'
    action:
      - service: script.notify_all
        data:
          message: >
            Всё ещё закрыты двери:
              {% if is_state('binary_sensor.be_door_contact', 'off') %}- спальня {% endif %}
              {% if is_state('binary_sensor.ch_door_contact', 'off') %}- детская {% endif %}
              {% if is_state('binary_sensor.li_door_contact', 'off') %}- гостиная {% endif %}
              {% if is_state('binary_sensor.kn_door_contact', 'off') %}- кухня{% endif %}

  - id: 'Старт уборки по расписанию'
    alias: vacuum_scheduled_start
    trigger:
      - platform: time_pattern
        hours: 19
        minutes: 00
    condition:
      - condition: state
        entity_id: binary_sensor.vacuum_able_to_clean
        state: 'on'
    action:
      - service: script.vacuum_start

  - id: 'Уведомление о начале уборки'
    alias: vacuum_started_cleaning_notify
    trigger:
      - platform: state
        entity_id: vacuum.valetudo_roborocks5
        from: 'docked'
        to: 'cleaning'
    action:
      - service: script.notify_all
        data:
          message: |
            Пылесос начал уборку

  - id: 'Выставить скорость при старте уборки'
    alias: vacuum_started_cleaning_setup_turbo
    trigger:
      - platform: state
        entity_id: vacuum.valetudo_roborocks5
        to: 'cleaning'
    action:
      - service: vacuum.set_fan_speed
        data_template:
          entity_id: vacuum.valetudo_roborocks5
          fan_speed: 'high'

  - id: 'Робот пылесос закончил уборку'
    alias: vacuum_finished_cleaning
    trigger:
      - platform: state
        entity_id: vacuum.valetudo_roborocks5
        to: 'returning'
    action:
      - service: vacuum.set_fan_speed
        data_template:
          entity_id: vacuum.valetudo_roborocks5
          fan_speed: 'off'
      - service: input_boolean.turn_on
        entity_id: input_boolean.daily_vacuum_done
      - service: script.notify_all
        data:
          message: |
            Пылесос закончил уборку
            Надо вытряхнуть контейнер

  - id: 'Сброс факта суточной уборки'
    alias: daily_vacuum_done_reset
    initial_state: true
    trigger:
      - platform: time_pattern
        hours: 03
        minutes: 00
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.daily_vacuum_done

  - id: 'Уведомление об ошибке'
    alias: vacuum_error_notification
    trigger:
      - platform: state
        entity_id: vacuum.valetudo_roborocks5
        to: 'error'
    action:
      - delay: 0:00:30
      - service: script.notify_all
        data:
          message: |
            У пылесоса ошибка "{{ states('sensor.valetudo_roborocks5_error_description') }}"
